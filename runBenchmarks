#!/bin/bash
interactions=$1
declare -a sizes=("4" "16" "64" "256" "512" "1024")
runs=5
actions=2000000


for i in treo/*; do
	name=$(echo $i | tr "." "\n" | head -n 1 | tr "/" "\n" | tail -n 1)
	cname=$name.cc
	treoname=$name.treo
	
	# Compile the C code
	cd c
	g++ -Wall -Wextra -pthread -std=c++11 cname -o name
	cd ..	

	for size in "${sizes[@]}"; do

		# Compile the treo code
		cd treo
		# Make sure to have reo alias to "java -jar [path to compiler jar]"
		reo $treoname -t Rust -p N:int=$size
		rstosh $name.rs
		g++ $cname $name.so -o $name
		
		# Cleanup
		rm $name.rs $name.so
		cd ..
	
		# Collect CPU cycles and runtime stats
		for run in [0..$runs]; do
			# Run C code and save stdout (interactions per second)
			cstats=$(perf stat c/$name $runs $actions 2>&1 >/dev/null | grep -E "task-clock | cycles  " | awk '{ print $1 }')
			# Run Reo code and save stdout (interactions per second)
			tstats=$(perf stat treo/$name $runs $actions 2>&1 >/dev/null | grep -E "task-clock | cycles  " | awk '{ print $1 }')

			#Save those times, or make graph or somethign idk
		done
	done
done
